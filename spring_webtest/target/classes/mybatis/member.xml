<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
<select id="loginCheck" parameterType="Map" resultType="int">
select count(*) from member 
where id=#{id} and passwd=#{passwd}  
</select>

<select id="getGrade" parameterType="String" resultType="String">
select grade from member
where id=#{id}          

</select>
<select id="getFname" parameterType="String" resultType="String">
select fname from member
where id=#{id}           

</select>
<select id="getId" parameterType="Map" resultType="String">
select id from member  
where mname=#{mname} and email=#{email} 

</select>

<select id="checkEmail" parameterType="String" resultType="int">
 SELECT COUNT(*)
 FROM member   
 WHERE email=#{email}   

</select>
<update id="updateFile" parameterType="Map">
update member set fname=#{fname} where id=#{id}
</update>

<update id="upPasswd" parameterType="Map">
update member set passwd=#{newpasswd} where id=#{id} and passwd=#{passwd}

</update>

<select id="checkId" parameterType="String" resultType="int">
select count(*) from member where id=#{id}
</select>

<select id="readPasswd" parameterType="Map" resultType="String">
select passwd from member
where id=#{id} and mname=#{mname}  

</select>

<select id="total" parameterType="Map" resultType="int">
select count(*) from team
<where>
<if test="col=='id'">
id like '%'||#{word}||'%'
</if>
<if test="col=='mname'">
mname like '%'||#{word}||'%'
</if>
<if test="col=='email'">
email like '%'||#{word}||'%'
</if>

</where>            
</select>
<select id="checkPasswd" parameterType="Map" resultType="int">
select count(id) from member 
		 where id=#{id} and passwd=#{passwd}

</select>

<select id="read" parameterType="String" resultType="MemberDTO">
select id, mname, tel, email, zipcode, address1, address2, fname, job, passwd, bday
from member where id=#{id}                                                        

</select>

<select id="list" parameterType="Map" resultType="MemberDTO">
select id, mname, tel, email, zipcode, address1, address2, fname, bday, r              
from(                                                                                  
	select id, mname, tel, email, zipcode, address1, address2, fname, bday, rownum r    
	from(                                                                               
		select id, mname, tel, email, zipcode, address1, address2, fname, bday from member

<where>
<if test="col=='id'">
id like '%'||#{word}||'%'
</if>
<if test="col=='mname'">
mname like '%'||#{word}||'%'
</if>
<if test="col=='email'">
email like '%'||#{word}||'%'
</if>

</where>                                               
		order by mdate desc                                                             
		)
		<![CDATA[
		)where r>=#{sno} and r<=#{eno}                                                           
		]]>

</select>

<select id="update" parameterType="MemberDTO">
update member                                  
set tel=#{tel}, email=#{email}, zipcode=#{zipcode,jdbcType=VARCHAR} ,                
address1=#{address1,jdbcType=VARCHAR} , address2=#{address2,jdbcType=VARCHAR} , job=#{job} , bday=#{bday}, passwd=#{passwd}
where id=#{id}                             

</select>



<delete id="delete" parameterType="String">
delete from member where id=#{id}                       

</delete>

<insert id="create" parameterType="MemberDTO">
INSERT INTO member(id, passwd, mname, tel, email, zipcode,
address1,address2, job, mdate, fname, bday)          
VALUES(#{id}, #{passwd}, #{mname}, #{tel}, #{email},                            
#{zipcode,jdbcType=VARCHAR},#{address1,jdbcType=VARCHAR},#{address2,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, sysdate, #{fname}, #{bday})                           
</insert>
		                                  

</mapper>